[{"/Users/antman/Developer Projects/spotify-profile/client/src/index.js":"1","/Users/antman/Developer Projects/spotify-profile/client/src/App.js":"2","/Users/antman/Developer Projects/spotify-profile/client/src/reportWebVitals.js":"3","/Users/antman/Developer Projects/spotify-profile/client/src/styles/AppStyles.js":"4","/Users/antman/Developer Projects/spotify-profile/client/src/components/Profile.js":"5","/Users/antman/Developer Projects/spotify-profile/client/src/components/LoginScreen.js":"6","/Users/antman/Developer Projects/spotify-profile/client/src/components/TopArtists.js":"7","/Users/antman/Developer Projects/spotify-profile/client/src/components/RecentlyPlayed.js":"8","/Users/antman/Developer Projects/spotify-profile/client/src/components/Playlist.js":"9","/Users/antman/Developer Projects/spotify-profile/client/src/components/Playlists.js":"10","/Users/antman/Developer Projects/spotify-profile/client/src/components/Nav.js":"11","/Users/antman/Developer Projects/spotify-profile/client/src/components/Track.js":"12","/Users/antman/Developer Projects/spotify-profile/client/src/components/Artist.js":"13","/Users/antman/Developer Projects/spotify-profile/client/src/components/User.js":"14","/Users/antman/Developer Projects/spotify-profile/client/src/components/TopTracks.js":"15","/Users/antman/Developer Projects/spotify-profile/client/src/components/TrackItem.js":"16","/Users/antman/Developer Projects/spotify-profile/client/src/components/Loader.js":"17","/Users/antman/Developer Projects/spotify-profile/client/src/spotify/index.js":"18","/Users/antman/Developer Projects/spotify-profile/client/src/utils/index.js":"19","/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/GlobalStyle.js":"20","/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/theme.js":"21","/Users/antman/Developer Projects/spotify-profile/client/src/styles/LoginScreenStyles.js":"22","/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/index.js":"23","/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/mixins.js":"24","/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/media.js":"25","/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/Main.js":"26","/Users/antman/Developer Projects/spotify-profile/client/src/styles/ProfileStyles.js":"27","/Users/antman/Developer Projects/spotify-profile/client/src/styles/NavStyles.js":"28","/Users/antman/Developer Projects/spotify-profile/client/src/styles/UserStyles.js":"29","/Users/antman/Developer Projects/spotify-profile/client/src/styles/TrackItemStyles.js":"30","/Users/antman/Developer Projects/spotify-profile/client/src/styles/TopArtistStyles.js":"31","/Users/antman/Developer Projects/spotify-profile/client/src/styles/ArtistStyles.js":"32","/Users/antman/Developer Projects/spotify-profile/client/src/styles/TopTracksStyles.js":"33","/Users/antman/Developer Projects/spotify-profile/client/src/styles/TrackStyles.js":"34","/Users/antman/Developer Projects/spotify-profile/client/src/styles/PlaylistsStyles.js":"35","/Users/antman/Developer Projects/spotify-profile/client/src/styles/PlaylistSyles.js":"36","/Users/antman/Developer Projects/spotify-profile/client/src/styles/RecentlyPlayedStyles.js":"37"},{"size":589,"mtime":1611006462764,"results":"38","hashOfConfig":"39"},{"size":641,"mtime":1611006462757,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1608650477756,"results":"41","hashOfConfig":"39"},{"size":123,"mtime":1611006462765,"results":"42","hashOfConfig":"39"},{"size":1601,"mtime":1611006462759,"results":"43","hashOfConfig":"39"},{"size":460,"mtime":1611006462758,"results":"44","hashOfConfig":"39"},{"size":2862,"mtime":1611006462760,"results":"45","hashOfConfig":"39"},{"size":1063,"mtime":1611006462759,"results":"46","hashOfConfig":"39"},{"size":2166,"mtime":1611006462759,"results":"47","hashOfConfig":"39"},{"size":1989,"mtime":1611006462759,"results":"48","hashOfConfig":"39"},{"size":1497,"mtime":1611006462759,"results":"49","hashOfConfig":"39"},{"size":5483,"mtime":1611006462760,"results":"50","hashOfConfig":"39"},{"size":2661,"mtime":1611006462758,"results":"51","hashOfConfig":"39"},{"size":5065,"mtime":1611006462761,"results":"52","hashOfConfig":"39"},{"size":2301,"mtime":1611006462760,"results":"53","hashOfConfig":"39"},{"size":1771,"mtime":1611006462760,"results":"54","hashOfConfig":"39"},{"size":125,"mtime":1611006462758,"results":"55","hashOfConfig":"39"},{"size":8174,"mtime":1611006462765,"results":"56","hashOfConfig":"39"},{"size":2104,"mtime":1611006462769,"results":"57","hashOfConfig":"39"},{"size":1792,"mtime":1611006462761,"results":"58","hashOfConfig":"39"},{"size":1330,"mtime":1611006462762,"results":"59","hashOfConfig":"39"},{"size":718,"mtime":1611006462765,"results":"60","hashOfConfig":"39"},{"size":210,"mtime":1611006462762,"results":"61","hashOfConfig":"39"},{"size":1665,"mtime":1611006462762,"results":"62","hashOfConfig":"39"},{"size":673,"mtime":1611006462762,"results":"63","hashOfConfig":"39"},{"size":423,"mtime":1611006462761,"results":"64","hashOfConfig":"39"},{"size":238,"mtime":1611006462767,"results":"65","hashOfConfig":"39"},{"size":2216,"mtime":1611006462766,"results":"66","hashOfConfig":"39"},{"size":3470,"mtime":1611006462769,"results":"67","hashOfConfig":"39"},{"size":1702,"mtime":1611006462768,"results":"68","hashOfConfig":"39"},{"size":2726,"mtime":1611006462767,"results":"69","hashOfConfig":"39"},{"size":1957,"mtime":1611006462765,"results":"70","hashOfConfig":"39"},{"size":953,"mtime":1611006462768,"results":"71","hashOfConfig":"39"},{"size":2537,"mtime":1611006462768,"results":"72","hashOfConfig":"39"},{"size":2193,"mtime":1611006462766,"results":"73","hashOfConfig":"39"},{"size":1518,"mtime":1611006462766,"results":"74","hashOfConfig":"39"},{"size":108,"mtime":1611006462767,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qndl9o",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/antman/Developer Projects/spotify-profile/client/src/index.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/App.js",[],["157","158"],"/Users/antman/Developer Projects/spotify-profile/client/src/reportWebVitals.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/AppStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/Profile.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/LoginScreen.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/TopArtists.js",["159"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTopArtistsShort, getTopArtistsMedium, getTopArtistsLong } from '../spotify';\nimport { catchErrors } from '../utils';\n\nimport Loader from './Loader.js';\n\nimport { Main } from '../globalStyles';\nimport { Header, Ranges, RangeButton, ArtistsContainer, Artist, ArtistArtwork, ArtistName , Mask } from '../styles/TopArtistStyles.js';\n\nconst TopArtists = () => {\n    const [data, setData] = useState({\n        topArtists: null,\n        activeRange: 'long',\n    });\n\n    const apiCalls = {\n        long: getTopArtistsLong(),\n        medium: getTopArtistsMedium(),\n        short: getTopArtistsShort(),\n    }\n\n    useEffect(() => {\n        catchErrors(getData());\n    }, []);\n\n    async function getData() {\n        const { data } = await getTopArtistsLong();\n        setData({ topArtists: data });\n    }\n\n    async function changeRange(range) {\n        const { data } = await apiCalls[range];\n        setData({ topArtists: data, activeRange: range });\n    }\n\n    const setActiveRange = range => catchErrors(changeRange(range));\n\n    const { topArtists, activeRange } = data;\n\n    return (\n        <Main>\n            <Header>\n                <h2>Top Artists</h2>\n                <Ranges>\n                <RangeButton\n                    isActive={activeRange === 'long'}\n                    onClick={() => setActiveRange('long')}>\n                    <span>All Time</span> \n                </RangeButton>\n                <RangeButton\n                    isActive={activeRange === 'medium'}\n                    onClick={() => setActiveRange('medium')}>\n                    <span>Last 6 Months</span>\n                </RangeButton>\n                <RangeButton\n                    isActive={activeRange === 'short'}\n                    onClick={() => setActiveRange('short')}>\n                    <span>Last Month</span>\n                </RangeButton>\n                </Ranges>\n            </Header>\n            <ArtistsContainer>\n                {topArtists ? (\n                    topArtists.items.map(({ id, external_urls, images, name }, i) => (\n                        <Artist>\n                            <ArtistArtwork to={`/artist/${id}`}>\n                                {images.length && <img src={images[1].url} alt='Artists'/>}\n                                <Mask>\n                                    Info\n                                </Mask>\n                            </ArtistArtwork>\n                            <ArtistName href={external_urls.spotify}>\n                                {name}\n                            </ArtistName>\n                        </Artist>\n                    ))\n                ) : (\n                    <Loader />\n                )}\n            </ArtistsContainer>\n        </Main>\n    )\n}\n\nexport default TopArtists;","/Users/antman/Developer Projects/spotify-profile/client/src/components/RecentlyPlayed.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/Playlist.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/Playlists.js",["160"],"import React, { useState, useEffect } from 'react';\nimport { catchErrors } from '../utils';\nimport { getPlaylists } from '../spotify';\n\nimport Loader from './Loader';\nimport { Main } from '../globalStyles';\nimport { Wrapper, PlaylistName, PlaylistsContainer, Playlist, PlaylistCover, TotalTracks, Mask } from '../styles/PlaylistsStyles.js';\n\nconst Playlists = () => {\n    const [data, setData] = useState({\n        playlists: null,\n    });\n\n    useEffect(() => {\n        catchErrors(getData());\n    }, []);\n\n    async function getData() {\n        const { data } = await getPlaylists();\n        setData({ playlists: data });\n    }\n    const { playlists } = data;\n\n    return (\n        <Main>\n            <h2>Your Playlists</h2>\n            <div>\n                <Wrapper>\n                    <PlaylistsContainer>\n                    {playlists ? (\n                        playlists.items.map(({ id, images, name, tracks }, i) => (\n                            <Playlist key={i}>\n                                <PlaylistCover to={`/playlist/${id}`}>\n                                    {images.length ? (\n                                        <img src={images[0].url} alt='Album Art'/>\n                                    ) : (\n                                        <div>\n                                            Icon\n                                        </div>\n                                    )}\n                                </PlaylistCover>\n                                <div>\n                                    <PlaylistName to={id}>{name}</PlaylistName>\n                                    <TotalTracks>{tracks.total} Tracks</TotalTracks>\n                                </div>\n                            </Playlist>\n                        ))\n                    ) : (\n                        <Loader />\n                    )}\n                    </PlaylistsContainer>\n                </Wrapper>\n            </div>\n        </Main>\n    )\n}\n\nexport default Playlists;","/Users/antman/Developer Projects/spotify-profile/client/src/components/Nav.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/Track.js",["161"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { formatDuration, getYear, parsePitchClass, catchErrors } from '../utils';\nimport { getTrackInfo } from '../spotify';\n\nimport Loader from './Loader.js';\nimport { Main } from '../globalStyles';\nimport { TrackContainer, Album, PlayTrackButton, Artwork, Info, Title, ArtistName, Features, Feature, FeatureText, FeatureLabel, AudioFeatures } from '../styles/TrackStyles.js';\n\nconst Track = () => {\n    const [data, setData] = useState({\n        track: null,\n        audioAnalysis: null,\n        audioFeatures: null,\n    });\n\n    const { trackId } = useParams();\n\n    useEffect(() => {\n        catchErrors(getData());\n    }, []);\n\n    async function getData() {\n        const { track, audioAnalysis, audioFeatures } = await getTrackInfo(trackId);\n        setData({\n            track: track,\n            audioAnalysis: audioAnalysis,\n            audioFeatures: audioFeatures\n        });\n    }\n\n    const { track, audioAnalysis, audioFeatures } = data;\n\n    return (\n        <>\n            {track ? (\n                <Main>\n                    <TrackContainer>\n                        <Artwork>\n                            <img src={track.album.images[0].url} alt='Album Artwork' />\n                        </Artwork>\n                        <Info>\n                            <Title>{track.name}</Title>\n                            <ArtistName>\n                                {track.artists && track.artists.map(({ name }, i) => (\n                                    <span key={i}>\n                                        {name}\n                                        {track.artists.length > 0 && i === track.artists.length - 1 ? '' : ','}\n                                        &nbsp;\n                                    </span>\n                                ))}\n                            </ArtistName>\n                            <Album>\n                                <a\n                                    href={track.album.external_urls.spotify}>\n                                        {track.album.name}\n                                </a>{' '}\n                                &middot; {getYear(track.album.release_date)}\n                            </Album>\n                            <PlayTrackButton\n                                href={track.album.external_urls.spotify}>\n                                    Play on Spotify\n                            </PlayTrackButton>\n                        </Info>\n                    </TrackContainer>\n\n                    {audioFeatures && audioAnalysis && (\n                        <AudioFeatures>\n                            <Features>\n                                <Feature>\n                                    <FeatureText>{formatDuration(audioFeatures.duration_ms)}</FeatureText>\n                                    <FeatureLabel>Duration</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{parsePitchClass(audioFeatures.key)}</FeatureText>\n                                    <FeatureLabel>Key</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{audioFeatures.mode === 1 ? 'Major' : 'Minor'}</FeatureText>\n                                    <FeatureLabel>Modality</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{audioFeatures.time_signature}</FeatureText>\n                                    <FeatureLabel>Time Signature</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{Math.round(audioFeatures.tempo)}</FeatureText>\n                                    <FeatureLabel>Tempo (BPM)</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{track.popularity}%</FeatureText>\n                                    <FeatureLabel>Popularity</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{audioAnalysis.beats.length}</FeatureText>\n                                    <FeatureLabel>Bars</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{audioAnalysis.beats.length}</FeatureText>\n                                    <FeatureLabel>Beats</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{audioAnalysis.sections.length}</FeatureText>\n                                    <FeatureLabel>Sections</FeatureLabel>\n                                </Feature>\n                                <Feature>\n                                    <FeatureText>{audioAnalysis.segments.length}</FeatureText>\n                                    <FeatureLabel>Segments</FeatureLabel>\n                                </Feature>\n                            </Features>\n                        </AudioFeatures>\n                    )}\n                </Main>\n            ) : (\n                <Loader />\n            )}\n        </>\n    )\n}\n\nexport default Track;","/Users/antman/Developer Projects/spotify-profile/client/src/components/Artist.js",["162","163"],"import React, { useState, useEffect } from 'react';\nimport { useParams, StaticRouter } from 'react-router-dom';\n\nimport { formatWithCommas, catchErrors } from '../utils';\nimport { getArtist, followArtist, doesUserFollowArtist } from '../spotify';\n\nimport Loader from './Loader.js';\nimport { ArtistContainer, Artwork, ArtistName, Stats, Stat, Number, NumLabel, FollowButton } from '../styles/ArtistStyles.js';\n\nconst Artist = (props) => {\n    const [data, setData] = useState({\n        artist: null\n    });\n\n    const [following, setFollowing] = useState()\n\n    const { artistId } = useParams();\n\n    useEffect(() => {\n        catchErrors(getData());\n        catchErrors(isFollowing());\n    }, []);\n\n    async function getData() {\n        const { data } = await getArtist(artistId);\n        setData({\n            artist: data\n        });\n    };\n\n    async function isFollowing() {\n        const { data } = await doesUserFollowArtist(artistId);\n        setFollowing(data[0]);\n    }\n\n    async function follow() {\n        await followArtist(artistId);\n        isFollowing();\n    }\n\n    const { artist } = data;\n\n    return (\n        <>\n            {artist ? (\n                <ArtistContainer>\n                    <Artwork>\n                        <img src={artist.images[0].url} alt='Artist Artwork'/>\n                    </Artwork>\n                <div>\n                    <ArtistName>{artist.name}</ArtistName>\n                </div>\n                <Stats>\n                    <Stat>\n                        <Number>{formatWithCommas(artist.followers.total)}</Number>\n                        <NumLabel>Followers</NumLabel>\n                    </Stat>\n                    {artist.genres && (\n                        <Stat>\n                            <Number>\n                            {artist.genres.map(genre => (\n                                <div key={genre}>{genre}</div>\n                            ))}\n                            </Number>\n                            <NumLabel>Genres</NumLabel>\n                        </Stat>\n                    )}\n                    {artist.popularity && (\n                        <Stat>\n                            <Number>{artist.popularity}%</Number>\n                            <NumLabel>Popularity</NumLabel>\n                        </Stat>\n                    )}\n                </Stats>\n                <FollowButton isFollowing={following} onClick={catchErrors(follow)}>\n                        {following ? 'Following' : 'Follow'}\n                </FollowButton>\n                </ArtistContainer>\n            ) : (\n                <Loader />\n            )}\n        </>\n    );\n}\n\nexport default Artist;","/Users/antman/Developer Projects/spotify-profile/client/src/components/User.js",["164","165"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUserInfo, logout } from '../spotify';\nimport { catchErrors } from '../utils';\n\nimport Loader from './Loader.js';\nimport TrackItem from './TrackItem.js';\n\nimport { Main } from '../globalStyles';\nimport { Header, NoAvatar, Avatar, UserName, Name, Stats, Stat, Number, NumberLabel, LogoutButton, Preview, Tracklist, TracklistHeading, MoreButton, Artist, ArtistArtwork, ArtistName, Mask } from '../styles/UserStyles.js'\n\nconst User = () => {\n    const [data, setData] = useState({\n        user: null,\n        followedArtists: null,\n        playlists: null,\n        topArtists: null,\n        topTracks: null,\n    });\n\n    useEffect(() => {\n        catchErrors(getData());\n    }, []);\n\n    async function getData() {\n        const { user, followedArtists, playlists, topArtists, topTracks } = await getUserInfo();\n        setData({ user, followedArtists, playlists, topArtists, topTracks });\n    };\n\n    const { user, followedArtists, playlists, topArtists, topTracks } = data;\n\n    const totalPlaylists = playlists ? playlists.total : 0;\n\n    return (\n        <>\n            {user ? (\n                <Main>\n                    <Header>\n                        <UserName href={user.external_urls.spotify}>\n                            <Name>{user.display_name}</Name>\n                        </UserName>\n                        <Stats>\n                            <Stat>\n                                <Number>{user.followers.total}</Number>\n                                <NumberLabel>Followers</NumberLabel>\n                            </Stat>\n                            {followedArtists && (\n                                <Stat>\n                                    <Number>{followedArtists.artists.items.length}</Number>\n                                    <NumberLabel>Following</NumberLabel>\n                                </Stat>\n                            )}\n                            {totalPlaylists && (\n                                <Stat>\n                                    <Link to='playlists'>\n                                        <Number>{totalPlaylists}</Number>\n                                        <NumberLabel>Playlists</NumberLabel>\n                                    </Link>\n                                </Stat>\n                            )}\n                        </Stats>\n                        <LogoutButton onClick={logout}>Logout</LogoutButton>\n                    </Header>\n\n                    <Preview>\n                        <Tracklist>\n                            <TracklistHeading>\n                                <h3>Top Artist of All Time</h3>\n                                <MoreButton to='/artists'>See More</MoreButton>\n                            </TracklistHeading>\n                            <div>\n                                {topArtists ? (\n                                    <ul>\n                                        {topArtists.items.slice(0, 10).map((artist, i) => (\n                                            <Artist key={i}>\n                                                <ArtistArtwork to={`/artist/${artist.id}`}>\n                                                    {artist.images.length && (\n                                                        <img src={artist.images[2].url} alt='Artist' />\n                                                    )}\n                                                    <Mask>\n                                                        Info\n                                                    </Mask>\n                                                </ArtistArtwork>\n                                                <ArtistName to={`/artist/${artist.id}`}>\n                                                    <span>{artist.name}</span>\n                                                </ArtistName>\n                                            </Artist>\n                                        ))}\n                                    </ul>\n                                ) : (\n                                    <Loader />\n                                )}\n                            </div>\n                        </Tracklist>\n\n                        <Tracklist>\n                            <TracklistHeading>\n                                <h3>Top Tracks of All Time</h3>\n                                <MoreButton to='/tracks'>See More</MoreButton>\n                            </TracklistHeading>\n                            <ul>\n                                {topTracks ? (\n                                    topTracks.items.slice(0,10).map((track, i) => <TrackItem track={track} key={i} />\n                                )) : (\n                                    <Loader />\n                                )}\n                            </ul>\n                        </Tracklist>\n                    </Preview>\n                </Main>\n            ) : (\n                <Loader />\n            )}\n        </>\n    );\n}\n\nexport default User;","/Users/antman/Developer Projects/spotify-profile/client/src/components/TopTracks.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/components/TrackItem.js",["166"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatDuration } from '../utils';\nimport { TrackContainer, TrackArtwork, TrackMeta, TrackLeft, Mask, TrackAlbum, TrackRight } from '../styles/TrackItemStyles';\n\nconst TrackItem = ({ track }) => {\n    return(\n        <li>\n            <TrackContainer to={`/track/${track.id}`}>\n                <div>\n                    <TrackArtwork>\n                        {track.album.images.length && <img src={track.album.images[2].url} alt='Album Artwork'/>}\n                        <Mask>\n                            Info\n                        </Mask>\n                    </TrackArtwork>\n                </div>\n                <TrackMeta>\n                    <TrackLeft>\n                        {track.name && <span>{track.name}</span>}\n                        {track.artists && track.album && (\n                            <TrackAlbum>\n                                {track.artists && track.artists.map(({ name }, i) => (\n                                    <span key={i}>\n                                        {name}\n                                        {track.artists.length > 0 && i === track.artists.length - 1 ? '' : ','}&nbsp;\n                                    </span>\n                                ))}\n                                &nbsp;&middot;&nbsp;&nbsp;\n                                {track.album.name}\n                            </TrackAlbum>\n                        )}\n                    </TrackLeft>\n                    <TrackRight>\n                        {track.duration_ms && <span>{formatDuration(track.duration_ms)}</span>}\n                    </TrackRight>\n                </TrackMeta>\n            </TrackContainer>\n        </li>\n    )\n};\n\nexport default TrackItem;","/Users/antman/Developer Projects/spotify-profile/client/src/components/Loader.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/spotify/index.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/utils/index.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/GlobalStyle.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/theme.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/LoginScreenStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/index.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/mixins.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/media.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/globalStyles/Main.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/ProfileStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/NavStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/UserStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/TrackItemStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/TopArtistStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/ArtistStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/TopTracksStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/TrackStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/PlaylistsStyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/PlaylistSyles.js",[],"/Users/antman/Developer Projects/spotify-profile/client/src/styles/RecentlyPlayedStyles.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"175","line":7,"column":91,"nodeType":"173","messageId":"174","endLine":7,"endColumn":95},{"ruleId":"176","severity":1,"message":"177","line":21,"column":8,"nodeType":"178","endLine":21,"endColumn":10,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":2,"column":21,"nodeType":"173","messageId":"174","endLine":2,"endColumn":33},{"ruleId":"176","severity":1,"message":"181","line":22,"column":8,"nodeType":"178","endLine":22,"endColumn":10,"suggestions":"182"},{"ruleId":"171","severity":1,"message":"183","line":10,"column":18,"nodeType":"173","messageId":"174","endLine":10,"endColumn":26},{"ruleId":"171","severity":1,"message":"184","line":10,"column":28,"nodeType":"173","messageId":"174","endLine":10,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Mask' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'StaticRouter' is defined but never used.","React Hook useEffect has missing dependencies: 'getData' and 'isFollowing'. Either include them or remove the dependency array.",["188"],"'NoAvatar' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [getData]",{"range":"193","text":"194"},"Update the dependencies array to be: [getData, isFollowing]",{"range":"195","text":"196"},[725,727],"[getData]",[693,695],"[getData, isFollowing]"]